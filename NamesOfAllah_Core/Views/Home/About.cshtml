@*@{
        ViewData["Title"] = "About";
    }
    <h2>@ViewData["Title"].</h2>
    <h3>@ViewData["Message"]</h3>

    <p>Use this area to provide additional information.</p>*@

@{
    Layout = null;
    List<KeyValuePair<string, namesOfAllah.Models.Name>> NamesOfAllah = (List<KeyValuePair<string, namesOfAllah.Models.Name>>)ViewData["Names"];
}
<!DOCTYPE html>
<html>
<head>
    <title>Имена Аллаха</title>
    @*<meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NamesOfAllah_Core</title>

    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
    </environment>*@
    @*<meta charset="utf-8">
        <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">*@
    <style>
        html, body {
            height: 100%;
        }

        body {
            background-color: #000000;
            margin: 0;
            font-family: Helvetica, sans-serif;
            overflow: hidden;
        }

        a {
            color: #ffffff;
        }

        #info {
            position: absolute;
            width: 100%;
            color: #ffffff;
            padding: 5px;
            font-family: Monospace;
            font-size: 13px;
            font-weight: bold;
            text-align: center;
            z-index: 1;
        }

        #menu {
            position: absolute;
            bottom: 20px;
            width: 100%;
            text-align: center;
        }

        .element {
            width: 180px;
            height: 120px;
            line-height: 100%;
            font-size: 20px;
            box-shadow: 0px 0px 12px rgba(0,255,255,0.5);
            text-align: center;
            cursor: default;
        }

            .element:hover {
                box-shadow: 0px 0px 12px rgba(0,255,255,0.75);
                border: 1px solid rgba(127,255,255,0.75);
            }

            .element .number {
                position: absolute;
                top: 20px;
                right: 20px;
                font-size: 12px;
                color: rgba(127,255,255,0.75);
            }

            .element .symbol {
                position: absolute;
                top: 40px;
                left: 0px;
                right: 0px;
                font-size: 60px;
                font-weight: bold;
                color: rgba(255,255,255,0.75);
                text-shadow: 0 0 10px rgba(0,255,255,0.95);
            }

            .element .details {
                vertical-align: middle;
                position: absolute;
                bottom: 15px;
                left: 0px;
                right: 0px;
                font-size: 20px;
                color: rgba(127,255,255,0.75);
            }

        button {
            color: rgba(127,255,255,0.75);
            background: transparent;
            outline: 0;
            border:0;
            padding: 0px 0px;
            cursor: pointer;
            left: 0px;
            right: 0px;
        }

            button:hover {
                background-color: rgba(0,255,255,0.5);
            }

            button:active {
                color: #000000;
                background-color: rgba(0,255,255,0.75);
            }
    </style>
</head>
<body>
    <script src="~/js/three.js"></script>
    <script src="~/js/libs/tween.min.js"></script>
    <script src="~/js/controls/TrackballControls.js"></script>
    <script src="~/js/renderers/CSS3DRenderer.js"></script>

    <div id="container"></div>
    @*<div id="info"><a href="http://threejs.org" target="_blank" rel="noopener">three.js css3d</a> - periodic table. <a href="https://plus.google.com/113862800338869870683/posts/QcFk5HrWran" target="_blank" rel="noopener">info</a>.</div>*@
    <div id="menu">
        <button id="table">TABLE</button>
        <button id="sphere">SPHERE</button>
        <button id="helix">HELIX</button>
        <button id="grid">GRID</button>
    </div>

    <script>

            var table = [];
        var table = [
				"", "Первый","", 4, 1,
				"", "Последний","", 5, 1,
				"", "Высочайший","", 6, 1,
				"", "Ближайший","", 7, 1,
				"","Возвышенный", "", 8, 1,
				"","Всевышний", "", 9, 1,
				"","Превознёсшийся", "", 10, 1,
				"","Великий", "", 11, 1,
				"","Славный", "", 12, 1,
				"","Большой", "", 13, 1,
				"","Слышащий", "", 14, 1,
				"","Видящий","", 15, 1,
				"","Знающий", "", 16, 1,

				"","Ведающий", "", 4, 2,
				"","Достохвальный", "", 5, 2,
				"","Могущественный", "", 6, 2,
				"","Всемогущий", "", 7, 2,
				"","Могучий, Способный", "", 8, 2,
				"","Всемогущий", "", 9, 2,
				"","Всесильный", "", 10, 2,
				"","Крепкий, Несокрушимый", "", 11, 2,
				"","Богатый", "", 12, 2,
				"","Мудрый", "", 13, 2,
				"","Выдержанный", "", 14, 2,
				"","Снисходительный", "", 15, 2,
				"","Прощающий", "", 16, 2,

				"","Всепрощающий", "", 4, 3,
				"","Принимающий покаяния", "", 5, 3,
				"","Наблюдающий", "", 6, 3,
				"","Свидетель", "", 7, 3,
				"","Хранитель", "", 8, 3,
				"","Проницательный, Добрый", "", 9, 3,
				"","Близкий", "", 10, 3,
				"","Отзывчивый", "", 11, 3,
				"","Любящий, Любимый", "", 12, 3,
				"","Признательный", "", 13, 3,
				"","Благодарный", "", 14, 3,
				"","Господин", "", 15, 3,
				"","Самодостаточный", "", 16, 3,

				"","Одолевающий", "", 4, 4,
				"","Всемогущий", "", 5, 4,
				"","Могучий, Выправляющий, Подчиняющий", "", 6, 4,
				"","Требующий отчёта", "", 7, 4,
				"","Наставляющий", "", 8, 4,
				"","Справедливый Судья", "", 9, 4,
				"","Святой", "", 10, 4,
				"","Пречистый, Дарующий мир и благополучие", "", 11, 4,
				"","Добродетельный", "", 12, 4,
				"","Дарующий", "", 13, 4,
				"","Милостивый", "", 14, 4,
				"","Милосердный", "", 15, 4,
				"","Великодушный", "", 16, 4,

				"","Самый великодушный", "", 4, 5,
				"","Сострадательный", "", 5, 5,
				"","Судия, Раскрывающий, Дарующий победу", "", 6, 5,
				"","Кормилец",  "", 7, 5,
				"","Наделяющий уделом",  "", 8, 5,
				"","Живой", "", 9, 5,
				"","Вседержитель", "", 10, 5,
				"","Свет небес и земли", "", 11, 5,
				"","Господь",  "", 12, 5,
				"","Аллах", "", 13, 5,
				"","Царь", "", 14, 5,
				"","Властелин", "", 15, 5,
				"","Обладающий властью", "", 16, 5,

				"","Единственный", "", 4, 6,
				"","Единый", "", 5, 6,
				"","Гордый", "", 6, 6,
				"","Творец", "", 7, 6,
				"","Созидатель", "", 8, 6,
				"","Создатель", "", 9, 6,
				"","Дарующий облик", "", 10, 6,
				"","Оберегающий, Дарующий безопасность", "", 11, 6,
				"","Хранитель", "", 12, 6,
				"","Всеобъемлющий", "", 13, 6,
				"","Дарующий пропитание, Наблюдающий", "", 14, 6,
				"","Попечитель и Хранитель",  "", 15, 6,
				"","Обладающий величием и великодушием", "", 16, 6,

				"","Собирающий людей", "", 4, 7,
				"","Первосоздатель небес и земли", "", 5, 7,
				"","Достаточный", "", 6, 7,
				"","Объемлющий", "", 7, 7,
				"","Истинный", "", 8, 7,
				"","Прекрасный", "", 9, 7,
				"","Мягкий, Добрый", "", 10, 7,
				"","Стыдливый", "", 11, 7,
				"","Покрывающий, Защищающий", "",12, 7,
				"","Бог", "", 13, 7,
				"","Удерживающий, Сжимающий", "", 14, 7,
				"","Простирающий", "", 15, 7,
				"","Одаряющий", "", 16, 7,

				"","Выдвигающий вперёд", "", 4, 8,
				"","Отбрасывающий назад", "", 5, 8,
				"","Разъясняющий", "", 6, 8,
				"","Дарующий, Щедрый", "", 7, 8,
				"","Покровитель", "", 8, 8,
				"","Господин, Покровитель", "", 9, 8,
				"","Помощник, Защитник", "", 10, 8,
				"","Исцеляющий", "", 11, 8,
			];
        /*
        "Tb", "Terbium", "158.92535", 12, 9,
				"Dy", "Dysprosium", "162.5", 13, 9,
				"Ho", "Holmium", "164.93032", 14, 9,
				"Er", "Erbium", "167.259", 15, 9,
				"Tm", "Thulium", "168.93421", 16, 9,
				"Yb", "Ytterbium", "173.054", 17, 9,
				"Lu", "Lutetium", "174.9668", 18, 9,
				"Hf", "Hafnium", "178.49", 4, 6,
				"Ta", "Tantalum", "180.94788", 5, 6,
				"W", "Tungsten", "183.84", 6, 6,
				"Re", "Rhenium", "186.207", 7, 6,
				"Os", "Osmium", "190.23", 8, 6,
				"Ir", "Iridium", "192.217", 9, 6,
				"Pt", "Platinum", "195.084", 10, 6,
				"Au", "Gold", "196.966569", 11, 6,
				"Hg", "Mercury", "200.59", 12, 6,
				"Tl", "Thallium", "204.3833", 13, 6,
				"Pb", "Lead", "207.2", 14, 6,
				"Bi", "Bismuth", "208.9804", 15, 6,
				"Po", "Polonium", "(209)", 16, 6,
				"At", "Astatine", "(210)", 17, 6,
				"Rn", "Radon", "(222)", 18, 6,
				"Ra", "Radium", "(226)", 2, 7,
				"Ac", "Actinium", "(227)", 4, 10,
				"Th", "Thorium", "232.03806", 5, 10,
				"Pa", "Protactinium", "231.0588", 6, 10,
				"U", "Uranium", "238.02891", 7, 10,
				"Np", "Neptunium", "(237)", 8, 10,
				"Pu", "Plutonium", "(244)", 9, 10,
				"Am", "Americium", "(243)", 10, 10,
				"Cm", "Curium", "(247)", 11, 10,
				"Bk", "Berkelium", "(247)", 12, 10,
				"Cf", "Californium", "(251)", 13, 10,
				"Es", "Einstenium", "(252)", 14, 10,
				"Fm", "Fermium", "(257)", 15, 10,
				"Md", "Mendelevium", "(258)", 16, 10,
				"No", "Nobelium", "(259)", 17, 10,
				"Lr", "Lawrencium", "(262)", 18, 10,
				"Rf", "Rutherfordium", "(267)", 4, 7,
				"Db", "Dubnium", "(268)", 5, 7,
				"Sg", "Seaborgium", "(271)", 6, 7,
				"Bh", "Bohrium", "(272)", 7, 7,
				"Hs", "Hassium", "(270)", 8, 7,
				"Mt", "Meitnerium", "(276)", 9, 7,
				"Ds", "Darmstadium", "(281)", 10, 7,
				"Rg", "Roentgenium", "(280)", 11, 7,
				"Cn", "Copernicium", "(285)", 12, 7,
				"Uut", "Unutrium", "(284)", 13, 7,
				"Fl", "Flerovium", "(289)", 14, 7,
				"Uup", "Ununpentium", "(288)", 15, 7,
				"Lv", "Livermorium", "(293)", 16, 7,
				"Uus", "Ununseptium", "(294)", 17, 7,
				"Uuo", "Ununoctium", "(294)", 18, 7
        var hor = 1;
        var ver = 1;

        for(var i = 0; i < NamesOfAllah.Count; i++)
       {
           table[i] = NamesOfAllah[i].Key;
        table[i+3] = hor;
        table[i+4] = ver;

            if(hor==6)
            {
                hor = 1;
                ver++;
                if(ver ==6)
                {
                    ver = 1;
                }
            }
            else
            {
                hor++;
            }
        }*/

      var camera, scene, renderer;
			var controls;

			var objects = [];
			var targets = { table: [], sphere: [], helix: [], grid: [] };

			init();
			animate();

			function init() {

				camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 );
				camera.position.z = 3000;

				scene = new THREE.Scene();

				// table

				for ( var i = 0; i < table.length; i += 5 ) {

					var element = document.createElement( 'button' );
					//var element = document.createElement( 'div' );
					element.className = 'element';
					element.style.backgroundColor = 'rgba(0,127,127,' + ( Math.random() * 0.5 + 0.25 ) + ')';
                    element.innerHTML = table[ i + 1 ];

					/*var number = document.createElement( 'div' );
					number.className = 'number';
					number.textContent = (i/5) + 1;
					element.appendChild( number );*/

					/*var symbol = document.createElement( 'div' );
					symbol.className = 'symbol';
					symbol.textContent = table[ i ];
					element.appendChild( symbol );*/

					/*var details = document.createElement( 'div' );
					details.className = 'details';
					details.innerHTML = table[ i + 1 ] + '<br>';// + table[ i + 2 ];
					element.appendChild( details );*/

					var object = new THREE.CSS3DObject( element );
					object.position.x = Math.random() * 4000 - 2000;
					object.position.y = Math.random() * 4000 - 2000;
					object.position.z = Math.random() * 4000 - 2000;
					scene.add( object );

					objects.push( object );

					//

					var object = new THREE.Object3D();
					object.position.x = ( table[ i + 3 ] * 140 ) - 1330;
					object.position.y = - ( table[ i + 4 ] * 180 ) + 990;

					targets.table.push( object );

				}

				// sphere

				var vector = new THREE.Vector3();
				var spherical = new THREE.Spherical();

				for ( var i = 0, l = objects.length; i < l; i ++ ) {

					var phi = Math.acos( -1 + ( 2 * i ) / l );
					var theta = Math.sqrt( l * Math.PI ) * phi;

					var object = new THREE.Object3D();

					spherical.set( 800, phi, theta );

					object.position.setFromSpherical( spherical );

					vector.copy( object.position ).multiplyScalar( 2 );

					object.lookAt( vector );

					targets.sphere.push( object );

				}

				// helix

				var vector = new THREE.Vector3();
				var cylindrical = new THREE.Cylindrical();

				for ( var i = 0, l = objects.length; i < l; i ++ ) {

					var theta = i * 0.175 + Math.PI;
					var y = - ( i * 8 ) + 450;

					var object = new THREE.Object3D();

					cylindrical.set( 900, theta, y );

					object.position.setFromCylindrical( cylindrical );

					vector.x = object.position.x * 2;
					vector.y = object.position.y;
					vector.z = object.position.z * 2;

					object.lookAt( vector );

					targets.helix.push( object );

				}

				// grid

				for ( var i = 0; i < objects.length; i ++ ) {

					var object = new THREE.Object3D();

					object.position.x = ( ( i % 5 ) * 400 ) - 800;
					object.position.y = ( - ( Math.floor( i / 5 ) % 5 ) * 400 ) + 800;
					object.position.z = ( Math.floor( i / 25 ) ) * 1000 - 2000;

					targets.grid.push( object );

				}

				//

				renderer = new THREE.CSS3DRenderer();
				renderer.setSize( window.innerWidth, window.innerHeight );
				renderer.domElement.style.position = 'absolute';
				document.getElementById( 'container' ).appendChild( renderer.domElement );

				//

				controls = new THREE.TrackballControls( camera, renderer.domElement );
				controls.rotateSpeed = 0.5;
				controls.minDistance = 500;
				controls.maxDistance = 6000;
				controls.addEventListener( 'change', render );

				var button = document.getElementById( 'table' );
				button.addEventListener( 'click', function ( event ) {

					transform( targets.table, 2000 );

				}, false );

				var button = document.getElementById( 'sphere' );
				button.addEventListener( 'click', function ( event ) {

					transform( targets.sphere, 2000 );

				}, false );

				var button = document.getElementById( 'helix' );
				button.addEventListener( 'click', function ( event ) {

					transform( targets.helix, 2000 );

				}, false );

				var button = document.getElementById( 'grid' );
				button.addEventListener( 'click', function ( event ) {

					transform( targets.grid, 2000 );

				}, false );

				transform( targets.table, 2000 );

				//

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function transform( targets, duration ) {

				TWEEN.removeAll();

				for ( var i = 0; i < objects.length; i ++ ) {

					var object = objects[ i ];
					var target = targets[ i ];

					new TWEEN.Tween( object.position )
						.to( { x: target.position.x, y: target.position.y, z: target.position.z }, Math.random() * duration + duration )
						.easing( TWEEN.Easing.Exponential.InOut )
						.start();

					new TWEEN.Tween( object.rotation )
						.to( { x: target.rotation.x, y: target.rotation.y, z: target.rotation.z }, Math.random() * duration + duration )
						.easing( TWEEN.Easing.Exponential.InOut )
						.start();

				}

				new TWEEN.Tween( this )
					.to( {}, duration * 2 )
					.onUpdate( render )
					.start();

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

				render();

			}

			function animate() {

				requestAnimationFrame( animate );

				TWEEN.update();

				controls.update();

			}

			function render() {

				renderer.render( scene, camera );

			}

    </script>
</body>
</html>
